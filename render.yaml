# render.yaml â€” monorepo with backend API and dashboard services

services:
  - name: sentinelmesh-api
    type: web
    env: python
    repo: https://github.com/rishit03/SentinelMesh # Ensure this is your correct repo URL
    region: oregon
    plan: free
    branch: main
    rootDir: backend
    buildCommand: |
      # Install Python dependencies
      pip install -r requirements.txt
      # Navigate to the frontend directory (relative to repo root ) and build the React app
      cd ../frontend/sentinelmesh-dashboard && npm install --legacy-peer-deps && npm run build
      # Move the built React app's dist folder to the correct location relative to backend
      # The 'backend' service's rootDir is 'backend', so 'frontend/sentinelmesh-dashboard/dist' 
      # needs to be created relative to 'backend/'
      mkdir -p ../backend/frontend/sentinelmesh-dashboard
      mv dist ../backend/frontend/sentinelmesh-dashboard/
    startCommand: uvicorn main:app --host 0.0.0.0 --port $PORT
    envVars:
      - key: SENTINELMESH_TOKEN
        value: rishit-org-token  # Your API token
      - key: DATABASE_URL
        value: sqlite:///./sentinelmesh.db # Ensure this is correct for Render
      - key: ENVIRONMENT
        value: production
    healthCheckPath: /health

  - name: sentinelmesh-dashboard # Keep this service if you still want to deploy the Streamlit dashboard
    type: web
    env: docker
    repo: https://github.com/rishit03/SentinelMesh
    region: oregon
    plan: free
    branch: main
    rootDir: dashboard
    envVars:
      - key: SENTINELMESH_USER
        value: rishit03
      - key: SENTINELMESH_PASS
        value: 12345678
      - key: API_BASE
        value: https://sentinelmesh-api.onrender.com # Ensure this points to your deployed API
